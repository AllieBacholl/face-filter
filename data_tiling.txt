Data tiling is necessary for the accelerator and the current plan is a tile is conceptually 
C by 3 by 18 (or 33 depending on the stride).
The order is as follows:
row 0, col[0:17] (or col[0:32]), chan 0
row 1, col[0:17] (or col[0:32]), chan 0
row 2, col[0:17] (or col[0:32]), chan 0
row 0, col[0:17] (or col[0:32]), chan 1
row 1, col[0:17] (or col[0:32]), chan 1
row 2, col[0:17] (or col[0:32]), chan 1
...
row 0, col[0:17] (or col[0:32]), chan #LAST_CHAN
row 1, col[0:17] (or col[0:32]), chan #LAST_CHAN
row 2, col[0:17] (or col[0:32]), chan #LAST_CHAN

but the next tile (or one of the future tiles) is gonna look like

row 1, col[0:17] (or col[0:32]), chan 0
row 2, col[0:17] (or col[0:32]), chan 0
row 3, col[0:17] (or col[0:32]), chan 0
row 1, col[0:17] (or col[0:32]), chan 1
row 2, col[0:17] (or col[0:32]), chan 1
row 3, col[0:17] (or col[0:32]), chan 1
...
row 1, col[0:17] (or col[0:32]), chan #LAST_CHAN
row 2, col[0:17] (or col[0:32]), chan #LAST_CHAN
row 3, col[0:17] (or col[0:32]), chan #LAST_CHAN

And the overlap is kinda huge. What is the best way to store the data in SDRAM so that the access is much more efficient
when I try to move it to BRAM?

INPUT CHAN: 64, INPUT DIMENSION: 128 == 4* INPUT CHAN: 64, INPUT DIMENSION: 64
